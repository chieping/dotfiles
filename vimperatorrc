" vim:set filetype=vim:
let mapleader=","

set showstatuslinks=1
set status=location
set titlestring=""
set hintchars=fjklasdhguionmerv
set smartcase
set gui=none,tabs,bookmarks
set nextpattern=\bnext\b,\bmore\b,next,^次(の)?ページ,\b次.*,→\b,^>$,^(>>|≫)$,^(>|≫),(>|≫)$
set previouspattern=\bprev|previous\b,prev,^前(の)?ページ,\b前.*,\b←,^<$,^(<<|≪)$,^(<|≪),(<|≪)$

" plugin_loader
let g:plugin_loader_roots = "~/src/github.com/vimpr/vimperator-plugins"
let g:plugin_loader_plugins = "_libly,feedSomeKeys_3,bookmarktoolbar-hint,lookupDictionary,caret-hint,stella"

" Show hint with no any label or value on input elements
set hintinputs=""

nnoremap <Leader>r :source ~/.vimperatorrc<CR>:echomsg "Reload vimperatorrc"<CR>

" Open dictionary with command-line-buffer (depends on lookupDictionary.js)
" Note that bracket-surrounded means allowing conjugated form
js<<EOB
  if(liberator.has("MacUnix")) {
    liberator.execute('nnoremap a <M-c>:eijiro [<M-v>]<CR>')
    liberator.execute('vnoremap a <M-c>:eijiro [<M-v>]<CR>')
  } else if(liberator.has("Windows")) {
    liberator.execute('nnoremap m :eijiro [<C-v>]')
    liberator.execute('nmap a <C-Ins>m<CR>')
    liberator.execute('vnoremap m :eijiro [<C-v>]')
    liberator.execute('vmap a <C-Ins>m<CR>')
  } else {
    liberator.execute('nnoremap a <C-c>:eijiro [<C-v>]<CR>')
    liberator.execute('vnoremap a <C-c>:eijiro [<C-v>]<CR>')
  }
EOB

nnoremap <Leader>ta :set gui=invaddons<CR>:echomsg "Toggle addons"<CR>
nnoremap <Leader>tt :set gui=invtabs<CR>:echomsg "Toggle tabs"<CR>
nnoremap <Leader>tn :set gui=invnavigation<CR>:echomsg "Toggle navigation"<CR>
nnoremap <Leader>tb :set gui=invbookmarks<CR>:echomsg "Toggle bookmarks"<CR>
nnoremap <Leader>tm :set gui=invmenu<CR>:echomsg "Toggle menu"<CR>
nnoremap <Leader>tc :set gui=none<CR>

js<<EOB
commands.addUserCommand(
  ["gyo[taku]"],
  "Open URL by Web Gyotaku",
  function(args) {
    var url = args.string || buffer.URL
    liberator.open("http://gyo.tc/" + url);
  },
  {}
);
EOB

js<<EOB
  if(!liberator.has("MacUnix")) {
      liberator.execute('noremap <A-b> :emenu 表示.サイドバー.ブックマーク<CR>')
  }
EOB

noremap <M-f> /
cnoremap <M-f> <NOP>
inoremap <M-f> <ESC>/

nnoremap d :tabclose -select lastactive<CR>

" clone tab
nnoremap c :tabduplicate<CR>

noremap <Esc><Esc> :noh<CR>

" use vimp's view-source
noremap <M-u> :<C-u>viewsource<CR>

js<<EOB
  if(liberator.has("MacUnix")) {
    liberator.execute('nnoremap <M-i> gi')
  } else {
    liberator.execute('nnoremap <A-i> gi')
  }
EOB

js<<EOB
  if(!liberator.has("MacUnix")) {
    liberator.execute('inoremap <A-v> <C-v>')
    liberator.execute('cnoremap <A-v> <C-v>')
    liberator.execute('inoremap <A-c> <C-c>')
    liberator.execute('nnoremap <A-c> <C-c>')
    liberator.execute('vnoremap <A-c> <C-c>')
    liberator.execute('cnoremap <A-c> <C-c>')
    liberator.execute('inoremap <A-x> <C-x>')
    liberator.execute('cnoremap <A-x> <C-x>')
  }
EOB

nnoremap C c

nnoremap j 6j
nnoremap k 6k

nnoremap h gT
nnoremap l gt

nnoremap H 3h
nnoremap L 3l

nnoremap ^ +

nnoremap ; :

" Emacs like key bind on Command mode
cnoremap <C-p> <S-Tab>
cnoremap <C-n> <Tab>
cnoremap <C-a> <Home>
cnoremap <C-e> <End>
cnoremap <C-b> <Left>
cnoremap <C-f> <Right>
cnoremap <C-d> <Del>

" Emacs like key bind on Insert mode
inoremap <C-p> <Up>
inoremap <C-n> <Down>
js<<EOB
  // This Home/End mapping break the behavior in Mac Environment
  if(!liberator.has("MacUnix")) {
    liberator.execute('inoremap <C-a> <Home>')
    liberator.execute('inoremap <C-e> <End>')
  }
EOB
inoremap <C-b> <Left>
inoremap <C-f> <Right>

vnoremap P <Esc><Esc>P
vnoremap p <Esc><Esc>p
vnoremap <CR> y<Esc><Esc>P

" yank and back to normal mode
vnoremap y y<Esc><Esc>:echomsg "Yanked <M-v>"<CR>
vnoremap <CR> y<Esc><Esc>:echomsg "Yanked <M-v>"<CR>

" depend on caret-hint.js
nnoremap <C-t> ;c

" Anchor
nnoremap ya :js util.copyToClipboard('<a href="'+buffer.URL + '">'+ buffer.title + '</a>')<CR>:echomsg "Yanked"<CR>
" Markdown
nnoremap ym :js util.copyToClipboard('['+ buffer.title +']('+ buffer.URL +')')<CR>:echomsg "Yanked"<CR>
" Backlog
nnoremap yb :js util.copyToClipboard('[['+buffer.title.replace(':','')+'>'+buffer.URL+']]')<CR>:echomsg "Yanked"<CR>
" Textile(Redmine)
nnoremap yr :js util.copyToClipboard('"'+buffer.title.replace('"',"'")+'":'+buffer.URL)<CR>:echomsg "Yanked"<CR>
" Simple
nnoremap ys :js util.copyToClipboard(buffer.title +' - '+ buffer.URL)<CR>:echomsg "Yanked"<CR>
" Tab
nnoremap yh :js util.copyToClipboard(buffer.title +'\t'+ buffer.URL)<CR>:echomsg "Yanked"<CR>

nnoremap yt :js util.copyToClipboard(buffer.title)<CR>:echomsg "Yanked"<CR>
nnoremap yu :js util.copyToClipboard(buffer.URL)<CR>:echomsg "Yanked"<CR>

nnoremap -urls='www\.youtube\.com|www\.nicovideo\.jp/watch' p       :stplay<CR>
nnoremap -urls='www\.youtube\.com|www\.nicovideo\.jp/watch' f       :stfullscreen<CR>
nnoremap -urls='www\.youtube\.com|www\.nicovideo\.jp/watch' r       :strepeat<CR>
nnoremap -urls='www\.youtube\.com|www\.nicovideo\.jp/watch' m       :stmute<CR>
nnoremap -urls='www\.nicovideo\.jp/watch'                   c       :stcomment<CR>
nnoremap -urls='www\.nicovideo\.jp/watch'                   <Left>  :stseek! -20<CR>
nnoremap -urls='www\.nicovideo\.jp/watch'                   <Right> :stseek! 20<CR>
nnoremap -urls='www\.youtube\.com'                          <Left>  :stseek! -5<CR>
nnoremap -urls='www\.youtube\.com'                          <Right> :stseek! 5<CR>

" sites where disable vimperator
ignorekeys clear
ignorekeys add docs\\.google\\.com
" ignorekeys add mail\\.google\\.com
" ignorekeys add www\\.google\\.com/calendar

" feedSomeKeys_3
command! -nargs=+ lazy autocmd VimperatorEnter .* <args>
lazy fmaps -urls='twitter\.com'         -events=keydown,keypress,keyup,vkeydown,vkeypress,vkeyup . <Left> <Right>
lazy fmaps -urls='www\.slideshare\.net' -events=keydown,keypress,keyup,vkeydown,vkeypress,vkeyup <Left> <Right>
lazy fmaps -urls='speakerdeck\.com'     -events=keydown,keypress,keyup,vkeydown,vkeypress,vkeyup <Left> <Right>
lazy fmaps -urls='slides\.com'          -events=keydown,keypress,keyup,vkeydown,vkeypress,vkeyup <Left> <Right>

style -name commandline-ime chrome://* #liberator-commandline-command input {ime-mode: inactive;}

" ignore statuspanel
style chrome://* .statuspanel-label {display: none;}

highlight StatusLine color: black; background: transparent; font-weight: normal;
highlight! Hint font-family: "Bitstream Vera Sans Mono",monaco,monospace; font-size: 12px; font-weight: bold; color: white; background-color: green; border-color: ButtonShadow; border-width: 0px; border-style: solid; padding: 2px; line-height: 1em;

source! ~/.vimperatorrc.local
